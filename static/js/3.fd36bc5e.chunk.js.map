{"version":3,"sources":["store/actions/commit.tsx","pages/Commits/index.tsx"],"names":["getCommits","dispatch","getState","a","async","app","fetch","process","repo","branch","res","ok","Promise","reject","json","data","type","payload","Home","useDispatch","useSelector","state","commits","useEffect","className","map","commit","key","sha","href","html_url","target","rel","message","author","src","avatar_url","alt","displayName","width","name","Date","date","toLocaleString","verification","verified","onClick","navigator","clipboard","writeText","slice"],"mappings":"sLAGaA,EAAa,WAMxB,OAAO,SAAOC,EAAUC,GAAjB,qBAAAC,EAAAC,OAAA,yDACWF,IAARG,EADH,EACGA,IADH,WAAAF,EAAA,MAEaG,MAAM,GAAD,OAClBC,yBADkB,kBACiBF,EAAIG,KADrB,wBACyCH,EAAII,UAH/D,WAECC,EAFD,QAKIC,GALJ,yCAMIC,QAAQC,UANZ,yBAAAV,EAAA,MAScO,EAAII,QATlB,cASCC,EATD,OAWLd,EAAS,CACPe,KAAM,eACNC,QAAQ,eACLZ,EAAIG,KAAOO,KAdX,kBAkBEA,GAlBF,wCC0EMG,UA/EQ,WAAO,IAAD,EACrBjB,EAAWkB,cAEXd,EAAMe,aAA6B,SAAAC,GAAK,OAAIA,EAAMhB,OAClDiB,EAAUF,aAAiC,SAAAC,GAAK,OAAIA,EAAMC,WAMhE,OAJAC,qBAAU,WACRtB,EAASD,OACR,CAACC,EAAUI,EAAIG,KAAMH,EAAII,SAG1B,wBAAIe,UAAU,cAAd,OACGF,QADH,IACGA,OADH,YACGA,EAAUjB,EAAIG,aADjB,aACG,EAAqBiB,KAAI,SAAAC,GAAM,iBAC9B,wBACEC,IAAKD,EAAOE,IACZJ,UAAU,0EAEV,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,4BACE,uBACEK,KAAMH,EAAOI,SACbC,OAAO,SACPC,IAAI,sBACJR,UAAU,cAETE,EAAOA,OAAOO,UAGnB,yBAAKT,UAAU,6BACb,uBACEK,KAAI,UAAEH,EAAOQ,cAAT,aAAE,EAAeJ,SACrBC,OAAO,SACPC,IAAI,uBAEJ,yBACEG,IAAG,UAAET,EAAOQ,cAAT,aAAE,EAAeE,WACpBC,IAAG,UAAEX,EAAOQ,cAAT,aAAE,EAAeI,YACpBC,MAAO,GACPf,UAAU,aAGd,0BAAMA,UAAU,2BACbE,EAAOA,OAAOQ,OAAOM,MAExB,0BAAMhB,UAAU,qBACb,IAAIiB,KAAKf,EAAOA,OAAOQ,OAAOQ,MAAMC,oBAI1CjB,EAAOA,OAAOkB,aAAaC,UAC1B,0BAAMrB,UAAU,yBAAhB,YAEF,yBAAKA,UAAU,aACb,4BACER,KAAK,SACLQ,UAAU,0BACVsB,QAAS,WACPC,UAAUC,UAAUC,UAAUvB,EAAOE,OAJzC,QASA,uBACEC,KAAMH,EAAOI,SACbC,OAAO,SACPC,IAAI,sBACJR,UAAU,2BAETE,EAAOE,IAAIsB,MAAM,EAAG","file":"static/js/3.fd36bc5e.chunk.js","sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { PayloadAction } from \"store/types/payload-action\";\r\n\r\nexport const getCommits = (): ThunkAction<\r\n  any,\r\n  State,\r\n  any,\r\n  PayloadAction<CommitsState>\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const { app } = getState();\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_API}/repos/${app.repo}/commits?sha=${app.branch}`\r\n    );\r\n    if (!res.ok) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: \"commits/save\",\r\n      payload: {\r\n        [app.repo]: data\r\n      }\r\n    });\r\n\r\n    return data;\r\n  };\r\n};\r\n\r\nexport default {\r\n  getCommits\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCommits } from \"store/actions/commit\";\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const app = useSelector<State, AppState>(state => state.app);\r\n  const commits = useSelector<State, CommitsState>(state => state.commits);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCommits());\r\n  }, [dispatch, app.repo, app.branch]);\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {commits?.[app.repo]?.map(commit => (\r\n        <li\r\n          key={commit.sha}\r\n          className=\"list-group-item list-group-item-action list-group-item-light text-dark\"\r\n        >\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"flex-fill\">\r\n              <h5>\r\n                <a\r\n                  href={commit.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-reset\"\r\n                >\r\n                  {commit.commit.message}\r\n                </a>\r\n              </h5>\r\n              <div className=\"d-flex align-items-center\">\r\n                <a\r\n                  href={commit.author?.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <img\r\n                    src={commit.author?.avatar_url}\r\n                    alt={commit.author?.displayName}\r\n                    width={20}\r\n                    className=\"rounded\"\r\n                  />\r\n                </a>\r\n                <span className=\"font-weight-normal mx-2\">\r\n                  {commit.commit.author.name}\r\n                </span>\r\n                <span className=\"font-weight-light\">\r\n                  {new Date(commit.commit.author.date).toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {commit.commit.verification.verified && (\r\n              <span className=\"badge badge-info mx-2\">Verified</span>\r\n            )}\r\n            <div className=\"btn-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(commit.sha);\r\n                }}\r\n              >\r\n                Copy\r\n              </button>\r\n              <a\r\n                href={commit.html_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-outline-primary\"\r\n              >\r\n                {commit.sha.slice(0, 7)}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}